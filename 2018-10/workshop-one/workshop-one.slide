Go for Web Developers
Workshop Part I
15 Oct 2018
Tags: edmontongo, golang

Edmonton Go
@edmontongo

https://edmontongo.org

* Outline

Today we'll be accessing a weather API with Go.

- Fetching
- Testing
- Object-oriented design
- Parsing JSON

* Dark Sky API

- Documentation [[https://darksky.net/dev/docs]]
- Register for a free API key [[https://darksky.net/dev/register]]

* Building the URL

Build this URL

   https://api.darksky.net/forecast/[key]/[latitude],[longitude]

A location structure

.play -edit 01/url.go /BEGIN/,/END/

A forecast function

.play -edit 01/url.go /BEGINFORECAST/,/ENDFORECAST/


* Building the URL

.play -edit 01/url.go


* HTTP Get

- http.Get [[https://golang.org/pkg/net/http/#Get]]

.play -edit 02/get.go /BEGINIMPORT/,/ENDIMPORT/

* HTTP Get

.play -edit 02/get.go /BEGINFORECAST/,/ENDFORECAST/

* Automated testing

- httptest.Server [[https://golang.org/pkg/net/http/httptest/#Server]]
- Let's us start up a test server to mimic the Dark Sky API
- Provides a base URL in the form `http://ipaddr:port` with no trailing slash

* Exercise 1

In preparation for testing, making the following changes:

- Modify the `Forecast` function to accept and use a `host` parameter
- Update the call in `main` and manually verify that it works

* HTTP test

.play -edit 03/get_test.go



* Object-oriented design

* Parsing JSON



